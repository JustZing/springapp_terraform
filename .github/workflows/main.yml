name: Terraform Multi-Region Deployment

on:
  push:
    branches:
      - main
      - feature/devops-pipeline
  workflow_dispatch:

env:
  TF_VERSION: 1.5.7
  TERRAFORM_WORKING_DIR: ./main

jobs:
  terraform:
    name: Terraform Apply Multi-Region
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      # 1. Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # 3. Configure AWS Credentials (default region is ap-south-1, but multi-region is handled in Terraform)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # required, Terraform will handle other regions dynamically

      # 4. Terraform Init
      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: terraform init -input=false

      # 5. Terraform Plan
      - name: Terraform Plan
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: terraform plan -input=false -out=tfplan

      # 6. Terraform Apply
      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: terraform apply -input=false -auto-approve tfplan

      # 7. Terraform Output (optional)
      - name: Terraform Output
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: terraform output
